# ----------------------------------------------------
# Andrew Flint Elastic Beanstalk AWS deployment test
# ----------------------------------------------------

name: af-ebs-test
env:
  EB_PACKAGE_S3_BUCKET_NAME : "answerking-elasticbeanstalk-andrewflinttest"
  EB_APPLICATION_NAME       : "answerking-elasticbeanstalk-andrewflinttest"
  EB_ENVIRONMENT_NAME       : "Answerkingelasticbeanstalkandrewflin-env"
  DEPLOY_PACKAGE_NAME       : "answerking-elasticbeanstalk-andrewflinttest-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-west-2"

on:
  workflow_run:
    workflows: ["Docker Image Pipeline"]
    branches:
      - v1.1.0-preview.3
      - BENCH-284-AF
    types:
      - completed

jobs:
  my_ci_pipeline:
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: create ZIP deployment package
        run: zip -r ${{ DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION_NAME }}

      - name: Copy our development package to s3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: echo completion message
        run: echo "CI pipeline has finished"

  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ my_ci_pipeline ]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket=${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }} \
          --description "CommitSHA-${{ github.sha }}

      - name: Deploy our new Application version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ github.sha }}"


      - name: echo completion message
        run: echo "AWS Elastic Beanstalk deployment pipeline has finished successfully"
